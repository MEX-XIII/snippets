# SNIPPETS PADRONIZADOS PARA ICLOUDS
# AUTHOR: EFRAIM ANDRADE

# -------------> SASS <-------------


'.source.scss':
	'SASS Reset':
		'prefix': 'reset'
		'body': """
		*{
			padding: 0;
			margin: 0;

			font-family: $font4;
		}

		body {
			overflow-x: hidden;
		}

		.pointer {cursor: pointer;}
		.both    {clear: both;}
		textarea {resize: none;}

		ul {
			list-style: none;
			margin: 0;
		}

		a {
			text-decoration: none;
			&:hover {
				text-decoration: none;
			}
		}
		"""

	'SASS Formula 576 PX to %':
		'prefix': 'sass_576_pxTo%'
		'body': """
			$1px / 576px * 100%
		"""

	'SASS Formula 720 PX to %':
		'prefix': 'sass_720_pxTo%'
		'body': """
			$1px / 720px * 100%
		"""

	'SASS Formula 960 PX to %':
		'prefix': 'sass_960_pxTo%'
		'body': """
			$1px / 960px * 100%
		"""

	'SASS Formula 1280 PX to %':
		'prefix': 'sass_1280_pxTo%'
		'body': """
			$1px / 1280px * 100%
		"""

	'SASS Formula 1440 PX to %':
		'prefix': 'sass_1440_pxTo%'
		'body': """
			$1px / 1440px * 100%
		"""

	'SASS Formula 1920 PX to %':
		'prefix': 'sass_1920_pxTo%'
		'body': """
			$1px / 1920px * 100%
		"""

	'SASS Display flex':
		'prefix': 'sass_display_flex'
		'body': """
			display: flex;
			flex-direction: $1;
			justify-content: $2;
		"""

	'SASS Padrões comentario only':
		'prefix': 'sass_padrao_comentario'
		'body': """
			/* POSICIONAMENTO */

			/* DISPLAY & MODELO DE CAIXA */

			/* OUTROS */
		"""

	# -------------> JAVASCRIPT <-------------


'.source.js':
    'Console log':
        'prefix': 'console'
        'body': 'console.log($1);'

    'Object JavaScript Default':
        'prefix': 'var'
        'body': """
            var $1 = {
                $2
            }
        """

    'Object JavaScript Ready Full':
        'prefix': 'js'
        'body': """
            var $1 = {

                $2: function(){

                    },

                ready: function(){
                        $1.$2();
                    }
            }

            $(document).ready($1.ready);
        """

    'JQuery Selector':
        'prefix': '$()'
        'body': '$("$1").$2'

    'Functions':
        'prefix': 'function'
        'body': """
            function $1($3){
                $2
            }

        """

    'JAVSCRIPT ajax responses type':
        'prefix': 'ajax_responses_type'
        'body': """
		/*
		0: requisição ainda não iniciada

		1: conexão com o servidor estabelecida

		2: requisição recebida

		3: processando requisição

		4: requisição está concluída e a resposta está pronta
		*/
        """

    'Ajax Jquery':
        'prefix': 'ajax_jquery'
        'body': """
	$.ajax( {
			type: "${1: GET or POST or PUT or DELETE ..}",
			url: "${2: API address}",
			success: function( response ) {

				var response = JSON.parse( response );

				${4: Execute Something like a function}

			}
		} );

        """

    'Ajax JS Pure GET':
        'prefix': 'ajax_pure_get'
        'body': """
		var xhr = new XMLHttpRequest();

		xhr.open( "GET", "${1: url}" );

		xhr.onreadystatechange = () => {

			if ( xhr.readyState == 4 ) {

				if ( xhr.status == 200 ) {

					let dados = JSON.parse( xhr.responseText );

				}else {

					console.log( `Não foi possivel receber dados dos servidor error: ${ xhr.responseText }` );

				}

			}

		};

		xhr.send();

        """

    'Ajax JS Pure POST':
        'prefix': 'ajax_pure_post'
        'body': """
		var xhr = new XMLHttpRequest();

		xhr.open( "POST", "${1: url}", true );

		xhr.setRequestHeader ( "Content-type", "application/json" );

		xhr.onreadystatechange = () => {

			if ( xhr.readyState == 4 ) {

				if ( xhr.status == 200 ) {

					alert( 'Dado enviado com sucesso' );

				} else {

					alert( `Não foi possível enviar o dadoo: ${xhr.responseText}` );

				}

			}

		};

		xhr.send( JSON.stringify( ${2: Array de Dados} ) );
        """


	# -------------> PHP <-------------

'.text.php, .text.html.php, .text.ctp.php':

	# DEFAULT

    'PHP tag':
        'prefix': 'php'
        'body': '<?php $1 ?>'

    'PHP debug exit':
      'prefix': 'debug_exit'
      'body': 'debug($1);exit;'

    'PHP debug':
      'prefix': 'debug'
      'body': 'debug($1);'

    'PHP echo pre':
      'prefix': 'pre'
      'body': "<?php echo '<pre>'; print_r($1); '</pre>'; ?>"

    'PHP function':
      'prefix': 'function'
      'body': """
            $1 function $2($3){
                $4
            };
      """

	# CAKE CONTROLLER

    'PHP cake variable':
      'prefix': 'set'
      'body': """
            $this->set('$1', $2);
      """

    'PHP cake variable compact':
      'prefix': 'set_compact'
      'body': """
            $this->set(compact('$1'));
      """

    'PHP cake controller':
      'prefix': 'controller'
      'body': """
          <?php
          class $1Controller extends AppController{

            //Models que irão ser utilizadas.
            public $uses = ['$2'];

            public function beforeFilter(){
              parent::beforeFilter();
            }

            public function index(){

            }

            public function create(){

            }

            public function edit(){

            }
          }

          ?>
      """

	# CAKE MODEL

    'PHP cake model':
      'prefix': 'model'
      'body': """
              <?php
              class $1 extends AppModel{

              }
              ?>
      """

    'PHP cake model method before save':
      'prefix': 'model_method_before_save'
      'body': """
		  public function beforeSave($options = []) {
			  $this->data[$this->alias]['$2'];

			  return true;
		  }
      """

    'PHP cake model method after find':
      'prefix': 'model_method_after_find'
      'body': """
		  public function afterFind($results, $primary = false) {
			  foreach ($results as $key => $value) {
				  $results[$key][$this->alias]['$1'];
			  }

			  return $results;
		  }
      """

    'PHP cake model method findAll':
      'prefix': 'method_findAll'
      'body': """
	  	$this->find('all', [
			$1
		]);
      """

    'PHP cake model method findFirst':
      'prefix': 'method_findFirst'
      'body': """
	  	$this->find('first', [
			$1
		]);
      """

    'PHP cake method options conditions':
      'prefix': 'find_conditions'
      'body': """
	  	'conditions' => [
			$1
		]
      """

    'PHP cake method options order':
      'prefix': 'find_order'
      'body': """
	  	'order' => [
			$1
		]
      """

    'PHP cake method options group':
      'prefix': 'find_group'
      'body': """
	  	'group' => [
			$1
		]
      """

    'PHP cake model associated belongsTo':
      'prefix': 'model_associated_belongsTo'
      'body': """
		public $belongsTo = [
			'$1',
		];
      """

    'PHP cake model associated hasMany':
      'prefix': 'model_associated_hasMany'
      'body': """
		public $hasMany = [
			'$1',
		];
      """

    'PHP cake model associated hasOne':
      'prefix': 'model_associated_hasOne'
      'body': """
		public $hasOne = [
			'$1',
		];
      """

	# CAKE ATRIBUTOS

    'PHP atribute messages':
      'prefix': 'atribute_messages'
      'body': """
        public $messages = [
            'saveSuccess' => "$1 salv$2 com sucesso!",
            'saveError' => "Erro ao salvar, tente novamente!",
            'notFound' => "$1 não encontrada!",
        ];
		"""

    'PHP atribute states':
      'prefix': 'atribute_states'
      'body': """
    	public $states = [
	        "AC" => "Acre",
	        "AL" => "Alagoas",
	        "AM" => "Amazonas",
	        "AP" => "Amapá",
	        "BA" => "Bahia",
	        "CE" => "Ceará",
	        "DF" => "Distrito Federal",
	        "ES" => "Espírito Santo",
	        "GO" => "Goiás",
	        "MA" => "Maranhão",
	        "MT" => "Mato Grosso",
	        "MS" => "Mato Grosso do Sul",
	        "MG" => "Minas Gerais",
	        "PA" => "Pará",
	        "PB" => "Paraíba",
	        "PR" => "Paraná",
	        "PE" => "Pernambuco",
	        "PI" => "Piauí",
	        "RJ" => "Rio de Janeiro",
	        "RN" => "Rio Grande do Norte",
	        "RO" => "Rondônia",
	        "RS" => "Rio Grande do Sul",
	        "RR" => "Roraima",
	        "SC" => "Santa Catarina",
	        "SE" => "Sergipe",
	        "SP" => "São Paulo",
	        "TO" => "Tocantins"
    	];
      """

    'PHP atributes countries':
      'prefix': 'atribute_countries'
      'body': """
	    public $countries = [
	        "África do Sul",
	        "Albânia",
	        "Alemanha",
	        "Andorra",
	        "Angola",
	        "Anguilla",
	        "Antigua",
	        "Arábia Saudita",
	        "Argentina",
	        "Armênia",
	        "Aruba",
	        "Austrália",
	        "Áustria",
	        "Azerbaijão",
	        "Bahamas",
	        "Bahrein",
	        "Bangladesh",
	        "Barbados",
	        "Bélgica",
	        "Benin",
	        "Bermudas",
	        "Botsuana",
	        "Brasil",
	        "Brunei",
	        "Bulgária",
	        "Burkina Fasso",
	        "Cabo Verde",
	        "Camarões",
	        "Camboja",
	        "Canadá",
	        "Cazaquistão",
	        "Chade",
	        "Chile",
	        "China",
	        "Cidade do Vaticano",
	        "Colômbia",
	        "Congo",
	        "Coréia do Sul",
	        "Costa do Marfim",
	        "Costa Rica",
	        "Croácia",
	        "Dinamarca",
	        "Djibuti",
	        "Dominica",
	        "EUA",
	        "Egito",
	        "El Salvador",
	        "Emirados Árabes",
	        "Equador",
	        "Eritréia",
	        "Escócia",
	        "Eslováquia",
	        "Eslovênia",
	        "Espanha",
	        "Estônia",
	        "Etiópia",
	        "Fiji",
	        "Filipinas",
	        "Finlândia",
	        "França",
	        "Gabão",
	        "Gâmbia",
	        "Gana",
	        "Geórgia",
	        "Gibraltar",
	        "Granada",
	        "Grécia",
	        "Guadalupe",
	        "Guam",
	        "Guatemala",
	        "Guiana",
	        "Guiana Francesa",
	        "Guiné-bissau",
	        "Haiti",
	        "Holanda",
	        "Honduras",
	        "Hong Kong",
	        "Hungria",
	        "Iêmen",
	        "Ilhas Cayman",
	        "Ilhas Cook",
	        "Ilhas Curaçao",
	        "Ilhas Marshall",
	        "Ilhas Turks & Caicos",
	        "Ilhas Virgens (brit.)",
	        "Ilhas Virgens(amer.)",
	        "Ilhas Wallis e Futuna",
	        "Índia",
	        "Indonésia",
	        "Inglaterra",
	        "Irlanda",
	        "Islândia",
	        "Israel",
	        "Itália",
	        "Jamaica",
	        "Japão",
	        "Jordânia",
	        "Kuwait",
	        "Latvia",
	        "Líbano",
	        "Liechtenstein",
	        "Lituânia",
	        "Luxemburgo",
	        "Macau",
	        "Macedônia",
	        "Madagascar",
	        "Malásia",
	        "Malaui",
	        "Mali",
	        "Malta",
	        "Marrocos",
	        "Martinica",
	        "Mauritânia",
	        "Mauritius",
	        "México",
	        "Moldova",
	        "Mônaco",
	        "Montserrat",
	        "Nepal",
	        "Nicarágua",
	        "Niger",
	        "Nigéria",
	        "Noruega",
	        "Nova Caledônia",
	        "Nova Zelândia",
	        "Omã",
	        "Palau",
	        "Panamá",
	        "Papua-nova Guiné",
	        "Paquistão",
	        "Peru",
	        "Polinésia Francesa",
	        "Polônia",
	        "Porto Rico",
	        "Portugal",
	        "Qatar",
	        "Quênia",
	        "Rep. Dominicana",
	        "Rep. Tcheca",
	        "Reunion",
	        "Romênia",
	        "Ruanda",
	        "Rússia",
	        "Saipan",
	        "Samoa Americana",
	        "Senegal",
	        "Serra Leone",
	        "Seychelles",
	        "Singapura",
	        "Síria",
	        "Sri Lanka",
	        "St. Kitts & Nevis",
	        "St. Lúcia",
	        "St. Vincent",
	        "Sudão",
	        "Suécia",
	        "Suiça",
	        "Suriname",
	        "Tailândia",
	        "Taiwan",
	        "Tanzânia",
	        "Togo",
	        "Trinidad & Tobago",
	        "Tunísia",
	        "Turquia",
	        "Ucrânia",
	        "Uganda",
	        "Uruguai",
	        "Venezuela",
	        "Vietnã",
	        "Zaire",
	        "Zâmbia",
	        "Zimbábue"
	    ];

      """

	# CAKE FUNCTIONS

    'PHP function atomic OFF':
      'prefix': 'function_atomic'
      'body': """

		"""

	# -----------------> WORDPRESS <-----------------

	# WORDPRESS FUNCTIONS

    'WORDPRESS function the_loop':
      'prefix': 'wordpress_function_the_loop'
      'body': """
			<?php
				$args = array(
					'post_type' => '$1'
				);

				$loop = new WP_Query( $args );
				if( $loop->have_posts() ){
					while ( $loop->have_posts() ) : $loop->the_post();
						wc_get_template_part( '$2', '$3' );
					endwhile;
				} else {
					echo _( 'No $1 found' );
				}
				wp_reset_postdata();
			?>
		"""

    'WORDPRESS function index':
      'prefix': 'wordpress_function_index'
      'body': """
			<?php include('header.php'); ?>

			$1

			<?php include('footer.php');?>
		"""

    'WORDPRESS function add_theme_support':
      'prefix': 'wordpress_function_add_theme_support'
      'body': "add_theme_support('$1');"

    'WORDPRESS function get_template_directory_uri':
      'prefix': 'wordpress_function_get_template_directory_uri'
      'body': "get_template_directory_uri();"

    'WORDPRESS function get_wc_cookie_posts':
      'prefix': 'wordpress_function_get_wc_cookie_posts'
      'body': """
		    function get_wc_cookie_posts(){
				if ( !isset( $_COOKIE['woocommerce_recently_viewed'] ) || empty( $_COOKIE['woocommerce_recently_viewed'] ) )
					return false;
				$viewed_products = explode( '|', $_COOKIE['woocommerce_recently_viewed'] );
				$viewed_products = array_reverse( array_filter( array_map( 'absint', $viewed_products ) ) );
				return $viewed_products;
		    }
		"""

    'WORDPRESS function get_excerpt':
      'prefix': 'wordpress_function_get_excerpt'
      'body': """
		    function get_excerpt($limit, $source = null){

		        if($source == "content" ? ($excerpt = get_the_content()) : ($excerpt = get_the_excerpt()));
		            $excerpt = preg_replace(" (\[.*?\])",'',$excerpt);
		            $excerpt = strip_shortcodes($excerpt);
		            $excerpt = strip_tags($excerpt);
		            $excerpt = substr($excerpt, 0, $limit);
		            $excerpt = substr($excerpt, 0, strripos($excerpt, " "));
		            $excerpt = trim(preg_replace( '/\s+/', ' ', $excerpt));
		            $excerpt = $excerpt.'...';
		            return $excerpt;
		    }
		"""

	# WORDPRESS VARIABLES

    'WORDPRESS variable globals':
      'prefix': 'wordpress_variable_globals'
      'body': "<?= $GLOBALS['server'] ?>"

    'WORDPRESS variable query':
      'prefix': 'wordpress_variable_query'
      'body': "$query = new WP_Query( $args );"

  	# WORDPRESS ARGS

    'WORDPRESS args cookie post':
      'prefix': 'wordpress_args_cookie_post'
      'body': """
		  $args = array (
			  'post_type'              => '$1',
			  'posts_per_page'         => $2,
			  'post__in'               => get_wc_cookie_posts()
		  );
		"""

	# -----------------> HTML TEMPLATES <-----------------

	# TEMPLATE Moltran

    'HTML TEMPLATE moltran basic':
      'prefix': 'html_template_moltran_basic'
      'body': """
<div class="content-page"> <!-- Moltran begin-->
	<div class="content"> <!-- Start content -->
		<div class="container">
			<div class="row">  <!-- Moltran end-->


         </div>
      </div> <!-- container -->
   </div> <!-- content -->
</div>
		"""

























#
